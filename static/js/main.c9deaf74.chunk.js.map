{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","className","Form","initialState","state","submitForm","handleSubmit","setState","handleChange","event","target","value","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","ReactDOM","render","document","getElementById"],"mappings":"mMAEMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAIR,EAAMS,gBAAgBJ,IAA3C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAeJS,EAZD,SAACV,GAAU,IAEdE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACI,wBAAOE,UAAU,iCAAjB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWT,cAAeA,EAAeO,gBAAiBA,Q,OCWvDG,E,4MA7CXC,aAAa,CACTP,KAAM,GACNC,IAAK,I,EAGTO,MAAO,EAAKD,a,EAEZE,WAAa,WACT,EAAKf,MAAMgB,aAAa,EAAKF,OAC7B,EAAKG,SAAS,EAAKJ,e,EAGvBK,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBd,EADe,EACfA,KAAMe,EADS,EACTA,MAEb,EAAKJ,SAAL,eACKX,EAAOe,K,4CAIhB,WAAU,IAAD,EACcC,KAAKR,MAAjBR,EADF,EACEA,KAAKC,EADP,EACOA,IAEZ,OACI,iCACI,uBAAOgB,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHJ,MAAOf,EACPoB,SAAUJ,KAAKJ,eACnB,uBAAOK,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHJ,MAAOd,EACPmB,SAAUJ,KAAKJ,eACnB,uBAAOM,KAAK,SAASH,MAAM,SAASb,QAASc,KAAKP,oB,GAxC/CY,aCkCJC,E,4MA9Bbd,MAAQ,CACNe,WAAY,I,EAGdpB,gBAAkB,SAACJ,GAAW,IACrBwB,EAAc,EAAKf,MAAnBe,WAEP,EAAKZ,SAAS,CACZY,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM3B,Q,EAKnBW,aAAe,SAACe,GACd,EAAKd,SAAS,CAACY,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAGxD,WAAS,IACAF,EAAcP,KAAKR,MAAnBe,WAEP,OACE,sBAAKlB,UAAU,kBAAf,UACM,cAAC,EAAD,CAAOT,cAAe2B,EAAYpB,gBAAiBa,KAAKb,kBACxD,cAAC,EAAD,CAAMO,aAAcM,KAAKN,sB,GA1BnBW,aCClBM,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.c9deaf74.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TableHeader = () => {\r\n    return(\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={()=>props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) =>{\r\n\r\n    const {characterData, removeCharacter} = props\r\n        \r\n    return (\r\n        <table className=\"table table-dark table-striped\">\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n    initialState={\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state= this.initialState\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name,job} = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}/>\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange}/>\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\nclass App extends Component {\r\n  \r\n  state = {\r\n    characters: [],\r\n  }\r\n\r\n  removeCharacter = (index) => {\r\n    const {characters} = this.state\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) => {\r\n        return i !== index\r\n      }),\r\n    })\r\n  }\r\n  \r\n  handleSubmit = (character) => {\r\n    this.setState({characters: [...this.state.characters, character]})\r\n  }\r\n\r\n  render(){\r\n    const {characters} = this.state\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n            <Table characterData={characters} removeCharacter={this.removeCharacter}/>\r\n            <Form handleSubmit={this.handleSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));"],"sourceRoot":""}